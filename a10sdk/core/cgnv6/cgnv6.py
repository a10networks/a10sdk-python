from a10sdk.common.A10BaseClass import A10BaseClass


class UdpCfg(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param action_type: {"enum": ["dnat", "drop", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}
    :param dscp_value: {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}
    :param end_port: {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}
    :param ipv4_list: {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}
    :param action_cfg: {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}
    :param dscp_direction: {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}
    :param start_port: {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}
    :param shared: {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}
    :param pool: {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "udp-cfg"
        self.DeviceProxy = ""
        self.action_type = ""
        self.dscp_value = ""
        self.end_port = ""
        self.ipv4_list = ""
        self.action_cfg = ""
        self.dscp_direction = ""
        self.start_port = ""
        self.shared = ""
        self.pool = ""

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class TcpCfg(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param action_type: {"enum": ["dnat", "drop", "pass-through", "snat", "set-dscp", "template"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; 'template': Template; ", "format": "enum"}
    :param dscp_value: {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}
    :param end_port: {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}
    :param ipv4_list: {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}
    :param action_cfg: {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}
    :param dscp_direction: {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}
    :param start_port: {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}
    :param shared: {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}
    :param pool: {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}
    :param http_alg: {"minLength": 1, "maxLength": 63, "type": "string", "description": "HTTP-ALG Template (Template Name)", "format": "string-rlx"}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "tcp-cfg"
        self.DeviceProxy = ""
        self.action_type = ""
        self.dscp_value = ""
        self.end_port = ""
        self.ipv4_list = ""
        self.action_cfg = ""
        self.dscp_direction = ""
        self.start_port = ""
        self.shared = ""
        self.pool = ""
        self.http_alg = ""

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class DscpCfg(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param action_type: {"enum": ["set-dscp"], "type": "string", "description": "'set-dscp': To set dscp value for the packets; ", "format": "enum"}
    :param action_cfg: {"enum": ["action"], "type": "string", "description": "'action': LSN Rule-List Action; ", "format": "enum"}
    :param dscp_value: {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}
    :param dscp_match: {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "any", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); 'any': Match any dscp value; '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}
    :param dscp_direction: {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "dscp-cfg"
        self.DeviceProxy = ""
        self.action_type = ""
        self.action_cfg = ""
        self.dscp_value = ""
        self.dscp_match = ""
        self.dscp_direction = ""

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class IcmpOthersCfg(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param action_type: {"enum": ["dnat", "drop", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}
    :param dscp_value: {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}
    :param ipv4_list: {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}
    :param action_cfg: {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}
    :param dscp_direction: {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}
    :param shared: {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}
    :param pool: {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "icmp-others-cfg"
        self.DeviceProxy = ""
        self.action_type = ""
        self.dscp_value = ""
        self.ipv4_list = ""
        self.action_cfg = ""
        self.dscp_direction = ""
        self.shared = ""
        self.pool = ""

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class RuleCfg(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param proto: {"enum": ["tcp", "udp", "icmp", "others", "dscp"], "type": "string", "description": "'tcp': TCP L4 Protoco; 'udp': UDP L4 Protocol; 'icmp': ICMP L4 Protocol; 'others': Other L4 Protocl; 'dscp': Match dscp value; ", "format": "enum"}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "rule-cfg"
        self.DeviceProxy = ""
        self.proto = ""
        self.udp_cfg = {}
        self.tcp_cfg = {}
        self.dscp_cfg = {}
        self.icmp_others_cfg = {}

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class Default(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param uuid: {"description": "uuid of the object", "format": "string", "minLength": 1, "modify-not-allowed": 1, "maxLength": 64, "type": "string"}
    :param rule_cfg: {"minItems": 1, "items": {"type": "object"}, "uniqueItems": true, "type": "array", "array": [{"properties": {"proto": {"enum": ["tcp", "udp", "icmp", "others", "dscp"], "type": "string", "description": "'tcp': TCP L4 Protoco; 'udp': UDP L4 Protocol; 'icmp': ICMP L4 Protocol; 'others': Other L4 Protocl; 'dscp': Match dscp value; ", "format": "enum"}, "udp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "end-port": {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "start-port": {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}}}, "tcp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "pass-through", "snat", "set-dscp", "template"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; 'template': Template; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "end-port": {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "start-port": {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}, "http-alg": {"minLength": 1, "maxLength": 63, "type": "string", "description": "HTTP-ALG Template (Template Name)", "format": "string-rlx"}}}, "dscp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["set-dscp"], "type": "string", "description": "'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "action-cfg": {"enum": ["action"], "type": "string", "description": "'action': LSN Rule-List Action; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "dscp-match": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "any", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); 'any': Match any dscp value; '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}}}, "optional": true, "icmp-others-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}}}}}]}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "default"
        self.DeviceProxy = ""
        self.uuid = ""
        self.rule_cfg = []

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class UdpCfg(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param action_type: {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}
    :param dscp_value: {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}
    :param end_port: {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}
    :param ipv4_list: {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}
    :param action_cfg: {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}
    :param dscp_direction: {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}
    :param start_port: {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}
    :param shared: {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}
    :param pool: {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "udp-cfg"
        self.DeviceProxy = ""
        self.action_type = ""
        self.dscp_value = ""
        self.end_port = ""
        self.ipv4_list = ""
        self.action_cfg = ""
        self.dscp_direction = ""
        self.start_port = ""
        self.shared = ""
        self.pool = ""

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class TcpCfg(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param action_type: {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp", "template"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; 'template': Template; ", "format": "enum"}
    :param dscp_value: {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}
    :param end_port: {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}
    :param ipv4_list: {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}
    :param action_cfg: {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}
    :param dscp_direction: {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}
    :param start_port: {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}
    :param shared: {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}
    :param pool: {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}
    :param http_alg: {"minLength": 1, "maxLength": 63, "type": "string", "description": "HTTP-ALG Template (Template Name)", "format": "string-rlx"}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "tcp-cfg"
        self.DeviceProxy = ""
        self.action_type = ""
        self.dscp_value = ""
        self.end_port = ""
        self.ipv4_list = ""
        self.action_cfg = ""
        self.dscp_direction = ""
        self.start_port = ""
        self.shared = ""
        self.pool = ""
        self.http_alg = ""

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class DscpCfg(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param action_type: {"enum": ["set-dscp"], "type": "string", "description": "'set-dscp': To set dscp value for the packets; ", "format": "enum"}
    :param action_cfg: {"enum": ["action"], "type": "string", "description": "'action': LSN Rule-List Action; ", "format": "enum"}
    :param dscp_value: {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}
    :param dscp_match: {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "any", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); 'any': Match any dscp value; '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}
    :param dscp_direction: {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "dscp-cfg"
        self.DeviceProxy = ""
        self.action_type = ""
        self.action_cfg = ""
        self.dscp_value = ""
        self.dscp_match = ""
        self.dscp_direction = ""

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class IcmpOthersCfg(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param action_type: {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}
    :param dscp_value: {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}
    :param ipv4_list: {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}
    :param action_cfg: {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}
    :param dscp_direction: {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}
    :param shared: {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}
    :param pool: {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "icmp-others-cfg"
        self.DeviceProxy = ""
        self.action_type = ""
        self.dscp_value = ""
        self.ipv4_list = ""
        self.action_cfg = ""
        self.dscp_direction = ""
        self.shared = ""
        self.pool = ""

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class RuleCfg(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param proto: {"enum": ["tcp", "udp", "icmp", "others", "dscp"], "type": "string", "description": "'tcp': TCP L4 Protoco; 'udp': UDP L4 Protocol; 'icmp': ICMP L4 Protocol; 'others': Other L4 Protocl; 'dscp': Match dscp value; ", "format": "enum"}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "rule-cfg"
        self.DeviceProxy = ""
        self.proto = ""
        self.udp_cfg = {}
        self.tcp_cfg = {}
        self.dscp_cfg = {}
        self.icmp_others_cfg = {}

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class IpList(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param ipv4_addr: {"optional": false, "type": "string", "description": "Configure a Specific Rule-Set (IP Network Address)", "format": "ipv4-cidr"}
    :param uuid: {"description": "uuid of the object", "format": "string", "minLength": 1, "modify-not-allowed": 1, "optional": true, "maxLength": 64, "type": "string"}
    :param rule_cfg: {"minItems": 1, "items": {"type": "object"}, "uniqueItems": true, "type": "array", "array": [{"properties": {"proto": {"enum": ["tcp", "udp", "icmp", "others", "dscp"], "type": "string", "description": "'tcp': TCP L4 Protoco; 'udp': UDP L4 Protocol; 'icmp': ICMP L4 Protocol; 'others': Other L4 Protocl; 'dscp': Match dscp value; ", "format": "enum"}, "udp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "end-port": {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "start-port": {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}}}, "tcp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp", "template"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; 'template': Template; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "end-port": {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "start-port": {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}, "http-alg": {"minLength": 1, "maxLength": 63, "type": "string", "description": "HTTP-ALG Template (Template Name)", "format": "string-rlx"}}}, "dscp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["set-dscp"], "type": "string", "description": "'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "action-cfg": {"enum": ["action"], "type": "string", "description": "'action': LSN Rule-List Action; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "dscp-match": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "any", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); 'any': Match any dscp value; '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}}}, "optional": true, "icmp-others-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}}}}}]}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "ip-list"
        self.DeviceProxy = ""
        self.ipv4_addr = ""
        self.uuid = ""
        self.rule_cfg = []

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class UdpCfg(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param action_type: {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}
    :param dscp_value: {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}
    :param end_port: {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}
    :param ipv4_list: {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}
    :param action_cfg: {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}
    :param dscp_direction: {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}
    :param start_port: {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}
    :param shared: {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}
    :param pool: {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "udp-cfg"
        self.DeviceProxy = ""
        self.action_type = ""
        self.dscp_value = ""
        self.end_port = ""
        self.ipv4_list = ""
        self.action_cfg = ""
        self.dscp_direction = ""
        self.start_port = ""
        self.shared = ""
        self.pool = ""

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class TcpCfg(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param action_type: {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp", "template"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; 'template': Template; ", "format": "enum"}
    :param dscp_value: {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}
    :param end_port: {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}
    :param ipv4_list: {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}
    :param action_cfg: {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}
    :param dscp_direction: {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}
    :param start_port: {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}
    :param shared: {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}
    :param pool: {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}
    :param http_alg: {"minLength": 1, "maxLength": 63, "type": "string", "description": "HTTP-ALG Template (Template Name)", "format": "string-rlx"}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "tcp-cfg"
        self.DeviceProxy = ""
        self.action_type = ""
        self.dscp_value = ""
        self.end_port = ""
        self.ipv4_list = ""
        self.action_cfg = ""
        self.dscp_direction = ""
        self.start_port = ""
        self.shared = ""
        self.pool = ""
        self.http_alg = ""

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class DscpCfg(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param action_type: {"enum": ["set-dscp"], "type": "string", "description": "'set-dscp': To set dscp value for the packets; ", "format": "enum"}
    :param action_cfg: {"enum": ["action"], "type": "string", "description": "'action': LSN Rule-List Action; ", "format": "enum"}
    :param dscp_value: {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}
    :param dscp_match: {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "any", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); 'any': Match any dscp value; '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}
    :param dscp_direction: {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "dscp-cfg"
        self.DeviceProxy = ""
        self.action_type = ""
        self.action_cfg = ""
        self.dscp_value = ""
        self.dscp_match = ""
        self.dscp_direction = ""

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class IcmpOthersCfg(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param action_type: {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}
    :param dscp_value: {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}
    :param ipv4_list: {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}
    :param action_cfg: {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}
    :param dscp_direction: {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}
    :param shared: {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}
    :param pool: {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "icmp-others-cfg"
        self.DeviceProxy = ""
        self.action_type = ""
        self.dscp_value = ""
        self.ipv4_list = ""
        self.action_cfg = ""
        self.dscp_direction = ""
        self.shared = ""
        self.pool = ""

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class RuleCfg(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param proto: {"enum": ["tcp", "udp", "icmp", "others", "dscp"], "type": "string", "description": "'tcp': TCP L4 Protoco; 'udp': UDP L4 Protocol; 'icmp': ICMP L4 Protocol; 'others': Other L4 Protocl; 'dscp': Match dscp value; ", "format": "enum"}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "rule-cfg"
        self.DeviceProxy = ""
        self.proto = ""
        self.udp_cfg = {}
        self.tcp_cfg = {}
        self.dscp_cfg = {}
        self.icmp_others_cfg = {}

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class DomainNameList(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param name_domain: {"description": "Configure a Specific Rule-Set (Domain Name)", "format": "string", "minLength": 1, "optional": false, "maxLength": 63, "type": "string"}
    :param uuid: {"description": "uuid of the object", "format": "string", "minLength": 1, "modify-not-allowed": 1, "optional": true, "maxLength": 64, "type": "string"}
    :param rule_cfg: {"minItems": 1, "items": {"type": "object"}, "uniqueItems": true, "type": "array", "array": [{"properties": {"proto": {"enum": ["tcp", "udp", "icmp", "others", "dscp"], "type": "string", "description": "'tcp': TCP L4 Protoco; 'udp': UDP L4 Protocol; 'icmp': ICMP L4 Protocol; 'others': Other L4 Protocl; 'dscp': Match dscp value; ", "format": "enum"}, "udp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "end-port": {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "start-port": {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}}}, "tcp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp", "template"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; 'template': Template; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "end-port": {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "start-port": {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}, "http-alg": {"minLength": 1, "maxLength": 63, "type": "string", "description": "HTTP-ALG Template (Template Name)", "format": "string-rlx"}}}, "dscp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["set-dscp"], "type": "string", "description": "'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "action-cfg": {"enum": ["action"], "type": "string", "description": "'action': LSN Rule-List Action; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "dscp-match": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "any", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); 'any': Match any dscp value; '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}}}, "optional": true, "icmp-others-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}}}}}]}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "domain-name-list"
        self.DeviceProxy = ""
        self.name_domain = ""
        self.uuid = ""
        self.rule_cfg = []

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class LsnRuleListList(A10BaseClass):
    
    """This class does not support CRUD Operations please use parent.

    :param ip_list: {"minItems": 1, "items": {"type": "ip"}, "uniqueItems": true, "array": [{"required": ["ipv4-addr"], "properties": {"ipv4-addr": {"optional": false, "type": "string", "description": "Configure a Specific Rule-Set (IP Network Address)", "format": "ipv4-cidr"}, "uuid": {"description": "uuid of the object", "format": "string", "minLength": 1, "modify-not-allowed": 1, "optional": true, "maxLength": 64, "type": "string"}, "rule-cfg": {"minItems": 1, "items": {"type": "object"}, "uniqueItems": true, "type": "array", "array": [{"properties": {"proto": {"enum": ["tcp", "udp", "icmp", "others", "dscp"], "type": "string", "description": "'tcp': TCP L4 Protoco; 'udp': UDP L4 Protocol; 'icmp': ICMP L4 Protocol; 'others': Other L4 Protocl; 'dscp': Match dscp value; ", "format": "enum"}, "udp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "end-port": {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "start-port": {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}}}, "tcp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp", "template"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; 'template': Template; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "end-port": {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "start-port": {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}, "http-alg": {"minLength": 1, "maxLength": 63, "type": "string", "description": "HTTP-ALG Template (Template Name)", "format": "string-rlx"}}}, "dscp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["set-dscp"], "type": "string", "description": "'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "action-cfg": {"enum": ["action"], "type": "string", "description": "'action': LSN Rule-List Action; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "dscp-match": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "any", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); 'any': Match any dscp value; '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}}}, "optional": true, "icmp-others-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}}}}}]}}}], "type": "array", "$ref": "/axapi/v3/cgnv6/lsn-rule-list/{name}/ip/{ipv4-addr}"}
    :param domain_name_list: {"minItems": 1, "items": {"type": "domain-name"}, "uniqueItems": true, "array": [{"required": ["name-domain"], "properties": {"name-domain": {"description": "Configure a Specific Rule-Set (Domain Name)", "format": "string", "minLength": 1, "optional": false, "maxLength": 63, "type": "string"}, "uuid": {"description": "uuid of the object", "format": "string", "minLength": 1, "modify-not-allowed": 1, "optional": true, "maxLength": 64, "type": "string"}, "rule-cfg": {"minItems": 1, "items": {"type": "object"}, "uniqueItems": true, "type": "array", "array": [{"properties": {"proto": {"enum": ["tcp", "udp", "icmp", "others", "dscp"], "type": "string", "description": "'tcp': TCP L4 Protoco; 'udp': UDP L4 Protocol; 'icmp': ICMP L4 Protocol; 'others': Other L4 Protocl; 'dscp': Match dscp value; ", "format": "enum"}, "udp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "end-port": {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "start-port": {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}}}, "tcp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp", "template"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; 'template': Template; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "end-port": {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "start-port": {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}, "http-alg": {"minLength": 1, "maxLength": 63, "type": "string", "description": "HTTP-ALG Template (Template Name)", "format": "string-rlx"}}}, "dscp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["set-dscp"], "type": "string", "description": "'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "action-cfg": {"enum": ["action"], "type": "string", "description": "'action': LSN Rule-List Action; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "dscp-match": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "any", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); 'any': Match any dscp value; '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}}}, "optional": true, "icmp-others-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}}}}}]}}}], "type": "array", "$ref": "/axapi/v3/cgnv6/lsn-rule-list/{name}/domain-name/{name-domain}"}
    :param name: {"description": "LSN Rule-List Name", "format": "string-rlx", "minLength": 1, "optional": false, "maxLength": 63, "type": "string"}
    :param uuid: {"description": "uuid of the object", "format": "string", "minLength": 1, "modify-not-allowed": 1, "optional": true, "maxLength": 64, "type": "string"}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        
        self.b_key = "lsn-rule-list-list"
        self.DeviceProxy = ""
        self.default = {}
        self.ip_list = []
        self.domain_name_list = []
        self.name = ""
        self.uuid = ""

        for keys, value in kwargs.items():
            setattr(self,keys, value)


class Cgnv6(A10BaseClass):
    
    """    :param lsn_rule_list_list: {"minItems": 1, "items": {"type": "lsn-rule-list"}, "uniqueItems": true, "array": [{"required": ["name"], "properties": {"default": {"type": "object", "properties": {"uuid": {"description": "uuid of the object", "format": "string", "minLength": 1, "modify-not-allowed": 1, "maxLength": 64, "type": "string"}, "rule-cfg": {"minItems": 1, "items": {"type": "object"}, "uniqueItems": true, "type": "array", "array": [{"properties": {"proto": {"enum": ["tcp", "udp", "icmp", "others", "dscp"], "type": "string", "description": "'tcp': TCP L4 Protoco; 'udp': UDP L4 Protocol; 'icmp': ICMP L4 Protocol; 'others': Other L4 Protocl; 'dscp': Match dscp value; ", "format": "enum"}, "udp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "end-port": {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "start-port": {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}}}, "tcp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "pass-through", "snat", "set-dscp", "template"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; 'template': Template; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "end-port": {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "start-port": {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}, "http-alg": {"minLength": 1, "maxLength": 63, "type": "string", "description": "HTTP-ALG Template (Template Name)", "format": "string-rlx"}}}, "dscp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["set-dscp"], "type": "string", "description": "'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "action-cfg": {"enum": ["action"], "type": "string", "description": "'action': LSN Rule-List Action; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "dscp-match": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "any", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); 'any': Match any dscp value; '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}}}, "optional": true, "icmp-others-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}}}}}]}}, "$ref": "/axapi/v3/cgnv6/lsn-rule-list/{name}/default"}, "ip-list": {"minItems": 1, "items": {"type": "ip"}, "uniqueItems": true, "array": [{"required": ["ipv4-addr"], "properties": {"ipv4-addr": {"optional": false, "type": "string", "description": "Configure a Specific Rule-Set (IP Network Address)", "format": "ipv4-cidr"}, "uuid": {"description": "uuid of the object", "format": "string", "minLength": 1, "modify-not-allowed": 1, "optional": true, "maxLength": 64, "type": "string"}, "rule-cfg": {"minItems": 1, "items": {"type": "object"}, "uniqueItems": true, "type": "array", "array": [{"properties": {"proto": {"enum": ["tcp", "udp", "icmp", "others", "dscp"], "type": "string", "description": "'tcp': TCP L4 Protoco; 'udp': UDP L4 Protocol; 'icmp': ICMP L4 Protocol; 'others': Other L4 Protocl; 'dscp': Match dscp value; ", "format": "enum"}, "udp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "end-port": {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "start-port": {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}}}, "tcp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp", "template"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; 'template': Template; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "end-port": {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "start-port": {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}, "http-alg": {"minLength": 1, "maxLength": 63, "type": "string", "description": "HTTP-ALG Template (Template Name)", "format": "string-rlx"}}}, "dscp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["set-dscp"], "type": "string", "description": "'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "action-cfg": {"enum": ["action"], "type": "string", "description": "'action': LSN Rule-List Action; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "dscp-match": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "any", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); 'any': Match any dscp value; '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}}}, "optional": true, "icmp-others-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}}}}}]}}}], "type": "array", "$ref": "/axapi/v3/cgnv6/lsn-rule-list/{name}/ip/{ipv4-addr}"}, "domain-name-list": {"minItems": 1, "items": {"type": "domain-name"}, "uniqueItems": true, "array": [{"required": ["name-domain"], "properties": {"name-domain": {"description": "Configure a Specific Rule-Set (Domain Name)", "format": "string", "minLength": 1, "optional": false, "maxLength": 63, "type": "string"}, "uuid": {"description": "uuid of the object", "format": "string", "minLength": 1, "modify-not-allowed": 1, "optional": true, "maxLength": 64, "type": "string"}, "rule-cfg": {"minItems": 1, "items": {"type": "object"}, "uniqueItems": true, "type": "array", "array": [{"properties": {"proto": {"enum": ["tcp", "udp", "icmp", "others", "dscp"], "type": "string", "description": "'tcp': TCP L4 Protoco; 'udp': UDP L4 Protocol; 'icmp': ICMP L4 Protocol; 'others': Other L4 Protocl; 'dscp': Match dscp value; ", "format": "enum"}, "udp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "end-port": {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "start-port": {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}}}, "tcp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp", "template"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; 'template': Template; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "end-port": {"description": "End of Port Range (inclusive)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "start-port": {"description": "Single Port or Start of Port Range (inclusive), Port 0 is Match Any Port", "minimum": 0, "type": "number", "maximum": 65535, "format": "number"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}, "http-alg": {"minLength": 1, "maxLength": 63, "type": "string", "description": "HTTP-ALG Template (Template Name)", "format": "string-rlx"}}}, "dscp-cfg": {"type": "object", "properties": {"action-type": {"enum": ["set-dscp"], "type": "string", "description": "'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "action-cfg": {"enum": ["action"], "type": "string", "description": "'action': LSN Rule-List Action; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "dscp-match": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "any", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); 'any': Match any dscp value; '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}}}, "optional": true, "icmp-others-cfg": {"type": "object", "properties": {"action-type": {"enum": ["dnat", "drop", "one-to-one-snat", "pass-through", "snat", "set-dscp"], "type": "string", "description": "'dnat': Apply Dest NAT; 'drop': Drop the Packets; 'one-to-one-snat': Apply one-to-one source NAT for the packets; 'pass-through': Pass the Packets Through; 'snat': Redirect the Packets to a Different Source NAT Pool; 'set-dscp': To set dscp value for the packets; ", "format": "enum"}, "dscp-value": {"enum": ["default", "af11", "af12", "af13", "af21", "af22", "af23", "af31", "af32", "af33", "af41", "af42", "af43", "cs1", "cs2", "cs3", "cs4", "cs5", "cs6", "cs7", "ef", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63"], "type": "string", "description": "'default': Default dscp (000000); 'af11': AF11 (001010); 'af12': AF12 (001100); 'af13': AF13 (001110); 'af21': AF21 (010010); 'af22': AF22 (010100); 'af23': AF23 (010110); 'af31': AF31 (011010); 'af32': AF32 (011100); 'af33': AF33 (011110); 'af41': AF41 (100010); 'af42': AF42 (100100); 'af43': AF43 (100110); 'cs1': CS1 (001000); 'cs2': CS2 (010000); 'cs3': CS3 (011000); 'cs4': CS4 (100000); 'cs5': CS5 (101000); 'cs6': CS6 (110000); 'cs7': CS7 (111000); 'ef': EF (101110); '0': 000000; '1': 000001; '2': 000010; '3': 000011; '4': 000100; '5': 000101; '6': 000110; '7': 000111; '8': 001000; '9': 001001; '10': 001010; '11': 001011; '12': 001100; '13': 001101; '14': 001110; '15': 001111; '16': 010000; '17': 010001; '18': 010010; '19': 010011; '20': 010100; '21': 010101; '22': 010110; '23': 010111; '24': 011000; '25': 011001; '26': 011010; '27': 011011; '28': 011100; '29': 011101; '30': 011110; '31': 011111; '32': 100000; '33': 100001; '34': 100010; '35': 100011; '36': 100100; '37': 100101; '38': 100110; '39': 100111; '40': 101000; '41': 101001; '42': 101010; '43': 101011; '44': 101100; '45': 101101; '46': 101110; '47': 101111; '48': 110000; '49': 110001; '50': 110010; '51': 110011; '52': 110100; '53': 110101; '54': 110110; '55': 110111; '56': 111000; '57': 111001; '58': 111010; '59': 111011; '60': 111100; '61': 111101; '62': 111110; '63': 111111; ", "format": "enum"}, "ipv4-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "IP-List (IP-List Name)", "format": "string-rlx"}, "action-cfg": {"enum": ["action", "no-action"], "type": "string", "description": "'action': LSN Rule-List Action; 'no-action': Exclude LSN Rule-List Action; ", "format": "enum"}, "dscp-direction": {"enum": ["inbound", "outbound"], "type": "string", "description": "'inbound': To set dscp value for inbound packets; 'outbound': To set dscp value for outbound packets; ", "format": "enum"}, "shared": {"default": 0, "partition-visibility": "private", "type": "number", "description": "The pool is a shared pool", "format": "flag"}, "pool": {"minLength": 1, "maxLength": 63, "type": "string", "description": "NAT Pool (NAT Pool or Pool Group)", "format": "string-rlx"}}}}}]}}}], "type": "array", "$ref": "/axapi/v3/cgnv6/lsn-rule-list/{name}/domain-name/{name-domain}"}, "name": {"description": "LSN Rule-List Name", "format": "string-rlx", "minLength": 1, "optional": false, "maxLength": 63, "type": "string"}, "uuid": {"description": "uuid of the object", "format": "string", "minLength": 1, "modify-not-allowed": 1, "optional": true, "maxLength": 64, "type": "string"}}}], "type": "array", "$ref": "/axapi/v3/cgnv6/lsn-rule-list/{name}"}
    :param dns64_virtualserver_list: {"minItems": 1, "items": {"type": "dns64-virtualserver"}, "uniqueItems": true, "array": [{"required": ["name"], "properties": {"use-if-ip": {"description": "Use Interface IP", "format": "flag", "default": 0, "optional": true, "plat-pos-list": ["soft-ax"], "not-list": ["ipv6-address", "ip-address"], "type": "number"}, "port-list": {"minItems": 1, "items": {"type": "port"}, "uniqueItems": true, "array": [{"required": ["port-number", "protocol"], "properties": {"protocol": {"optional": false, "enum": ["dns-udp"], "type": "string", "description": "'dns-udp': DNS service over UDP; ", "format": "enum"}, "uuid": {"description": "uuid of the object", "format": "string", "minLength": 1, "modify-not-allowed": 1, "optional": true, "maxLength": 64, "type": "string"}, "precedence": {"default": 0, "optional": true, "type": "number", "description": "Set auto NAT pool as higher precedence for source NAT", "format": "flag"}, "auto": {"default": 0, "optional": true, "type": "number", "description": "Configure auto NAT for the vport", "format": "flag"}, "template-policy": {"description": "Policy Template (Policy template name)", "format": "string-rlx", "minLength": 1, "optional": true, "maxLength": 63, "type": "string", "$ref": "/axapi/v3/cgnv6/template/policy"}, "sampling-enable": {"minItems": 1, "items": {"type": "object"}, "uniqueItems": true, "type": "array", "array": [{"properties": {"optional": true, "counters1": {"enum": ["all", "curr_conn", "total_l4_conn", "total_l7_conn", "toatal_tcp_conn", "total_conn", "total_fwd_bytes", "total_fwd_pkts", "total_rev_bytes", "total_rev_pkts", "total_dns_pkts", "total_mf_dns_pkts", "es_total_failure_actions", "compression_bytes_before", "compression_bytes_after", "compression_hit", "compression_miss", "compression_miss_no_client", "compression_miss_template_exclusion", "curr_req", "total_req", "total_req_succ", "peak_conn", "curr_conn_rate", "last_rsp_time", "fastest_rsp_time", "slowest_rsp_time"], "type": "string", "description": "'all': all; 'curr_conn': curr_conn; 'total_l4_conn': total_l4_conn; 'total_l7_conn': total_l7_conn; 'toatal_tcp_conn': toatal_tcp_conn; 'total_conn': total_conn; 'total_fwd_bytes': total_fwd_bytes; 'total_fwd_pkts': total_fwd_pkts; 'total_rev_bytes': total_rev_bytes; 'total_rev_pkts': total_rev_pkts; 'total_dns_pkts': total_dns_pkts; 'total_mf_dns_pkts': total_mf_dns_pkts; 'es_total_failure_actions': es_total_failure_actions; 'compression_bytes_before': compression_bytes_before; 'compression_bytes_after': compression_bytes_after; 'compression_hit': compression_hit; 'compression_miss': compression_miss; 'compression_miss_no_client': compression_miss_no_client; 'compression_miss_template_exclusion': compression_miss_template_exclusion; 'curr_req': curr_req; 'total_req': total_req; 'total_req_succ': total_req_succ; 'peak_conn': peak_conn; 'curr_conn_rate': curr_conn_rate; 'last_rsp_time': last_rsp_time; 'fastest_rsp_time': fastest_rsp_time; 'slowest_rsp_time': slowest_rsp_time; ", "format": "enum"}}}]}, "port-number": {"description": "Port", "format": "number", "type": "number", "maximum": 65534, "minimum": 0, "optional": false}, "template-dns": {"description": "DNS template (DNS template name)", "format": "string-rlx", "minLength": 1, "optional": true, "maxLength": 63, "type": "string", "$ref": "/axapi/v3/cgnv6/template/dns"}, "service-group": {"description": "Bind a Service Group to this Virtual Server (Service Group Name)", "format": "string-rlx", "minLength": 1, "optional": true, "maxLength": 128, "type": "string", "$ref": "/axapi/v3/cgnv6/service-group"}, "action": {"description": "'enable': Enable; 'disable': Disable; ", "format": "enum", "default": "enable", "type": "string", "enum": ["enable", "disable"], "optional": true}, "pool": {"description": "Specify NAT pool or pool group", "format": "string-rlx", "minLength": 1, "$ref-list": ["/axapi/v3/ip/nat/pool", "/axapi/v3/ipv6/nat/pool", "/axapi/v3/ip/nat/pool-group", "/axapi/v3/ipv6/nat/pool-group"], "optional": true, "maxLength": 128, "type": "string"}}}], "type": "array", "$ref": "/axapi/v3/cgnv6/dns64-virtualserver/{name}/port/{port-number}+{protocol}"}, "name": {"description": "CGNV6 Virtual Server Name", "format": "string-rlx", "minLength": 1, "optional": false, "maxLength": 127, "type": "string"}, "template-policy": {"description": "Policy template name", "format": "string-rlx", "minLength": 1, "optional": true, "maxLength": 63, "type": "string", "$ref": "/axapi/v3/cgnv6/template/policy"}, "vrid": {"description": "Join a vrrp group (Specify ha VRRP-A vrid)", "format": "number", "type": "number", "maximum": 31, "minimum": 1, "optional": true}, "enable-disable-action": {"description": "'enable': Enable Virtual Server (default); 'disable': Disable Virtual Server; ", "format": "enum", "default": "enable", "type": "string", "enum": ["enable", "disable"], "optional": true}, "policy": {"default": 0, "optional": true, "type": "number", "description": "Policy template", "format": "flag"}, "netmask": {"optional": true, "modify-not-allowed": 1, "type": "string", "description": "IP subnet mask", "format": "ipv4-netmask-brief"}, "ip-address": {"description": "IP Address", "format": "ipv4-address", "optional": true, "not-list": ["ipv6-address", "use-if-ip"], "modify-not-allowed": 1, "type": "string"}, "ipv6-address": {"description": "IPV6 address", "format": "ipv6-address", "optional": true, "not-list": ["ip-address", "use-if-ip"], "modify-not-allowed": 1, "type": "string"}, "ethernet": {"optional": true, "plat-pos-list": ["soft-ax"], "type": "number", "description": "Ethernet interface", "format": "interface"}, "uuid": {"description": "uuid of the object", "format": "string", "minLength": 1, "modify-not-allowed": 1, "optional": true, "maxLength": 64, "type": "string"}}}], "type": "array", "$ref": "/axapi/v3/cgnv6/dns64-virtualserver/{name}"}
    :param service_group_list: {"minItems": 1, "items": {"type": "service-group"}, "uniqueItems": true, "array": [{"required": ["name"], "properties": {"shared-partition": {"description": "Share with a single partition (Partition Name)", "partition-visibility": "shared", "minLength": 1, "format": "string", "optional": true, "maxLength": 14, "not": "shared-group", "type": "string"}, "protocol": {"description": "'tcp': TCP LB service; 'udp': UDP LB service; ", "format": "enum", "type": "string", "enum": ["tcp", "udp"], "modify-not-allowed": 1, "optional": true}, "uuid": {"description": "uuid of the object", "format": "string", "minLength": 1, "modify-not-allowed": 1, "optional": true, "maxLength": 64, "type": "string"}, "health-check": {"description": "Health Check (Monitor Name)", "format": "string", "minLength": 1, "optional": true, "maxLength": 31, "type": "string", "$ref": "/axapi/v3/health/monitor"}, "sampling-enable": {"minItems": 1, "items": {"type": "object"}, "uniqueItems": true, "type": "array", "array": [{"properties": {"optional": true, "counters1": {"enum": ["all", "server_selection_fail_drop", "server_selection_fail_reset", "service_peak_conn"], "type": "string", "description": "'all': all; 'server_selection_fail_drop': server_selection_fail_drop; 'server_selection_fail_reset': server_selection_fail_reset; 'service_peak_conn': service_peak_conn; ", "format": "enum"}}}]}, "member-list": {"minItems": 1, "items": {"type": "member"}, "uniqueItems": true, "array": [{"required": ["name", "port"], "properties": {"uuid": {"description": "uuid of the object", "format": "string", "minLength": 1, "modify-not-allowed": 1, "optional": true, "maxLength": 64, "type": "string"}, "sampling-enable": {"minItems": 1, "items": {"type": "object"}, "uniqueItems": true, "type": "array", "array": [{"properties": {"optional": true, "counters1": {"enum": ["all", "curr_conn", "total_fwd_bytes", "total_fwd_pkts", "total_rev_bytes", "total_rev_pkts", "total_conn", "total_rev_pkts_inspected", "total_rev_pkts_inspected_status_code_2xx", "total_rev_pkts_inspected_status_code_non_5xx", "curr_req", "total_req", "total_req_succ", "peak_conn", "response_time", "fastest_rsp_time", "slowest_rsp_time"], "type": "string", "description": "'all': all; 'curr_conn': curr_conn; 'total_fwd_bytes': total_fwd_bytes; 'total_fwd_pkts': total_fwd_pkts; 'total_rev_bytes': total_rev_bytes; 'total_rev_pkts': total_rev_pkts; 'total_conn': total_conn; 'total_rev_pkts_inspected': total_rev_pkts_inspected; 'total_rev_pkts_inspected_status_code_2xx': total_rev_pkts_inspected_status_code_2xx; 'total_rev_pkts_inspected_status_code_non_5xx': total_rev_pkts_inspected_status_code_non_5xx; 'curr_req': curr_req; 'total_req': total_req; 'total_req_succ': total_req_succ; 'peak_conn': peak_conn; 'response_time': response_time; 'fastest_rsp_time': fastest_rsp_time; 'slowest_rsp_time': slowest_rsp_time; ", "format": "enum"}}}]}, "name": {"description": "Member name", "format": "comp-string", "minLength": 1, "optional": false, "maxLength": 127, "type": "string", "$ref": "/axapi/v3/cgnv6/server"}, "port": {"description": "Port number", "format": "number", "default": 65534, "optional": false, "maximum": 65534, "minimum": 0, "type": "number", "$ref": "/axapi/v3/cgnv6/server/port"}}}], "type": "array", "$ref": "/axapi/v3/cgnv6/service-group/{name}/member/{name}+{port}"}, "shared-group": {"description": "Share with a partition group (Partition Group Name)", "partition-visibility": "shared", "minLength": 1, "format": "string", "optional": true, "maxLength": 63, "not": "shared-partition", "type": "string"}, "name": {"description": "CGNV6 Service Name", "format": "string-rlx", "minLength": 1, "optional": false, "maxLength": 127, "type": "string"}}}], "type": "array", "$ref": "/axapi/v3/cgnv6/service-group/{name}"}
    :param lsn_radius_profile_list: {"minItems": 1, "items": {"type": "lsn-radius-profile"}, "uniqueItems": true, "array": [{"required": ["lid-profile-index"], "properties": {"lid-profile-index": {"description": "LSN RADIUS Profile Index", "format": "number", "type": "number", "maximum": 16, "minimum": 1, "optional": false}, "radius": {"minItems": 1, "items": {"type": "object"}, "uniqueItems": true, "type": "array", "array": [{"properties": {"exact-value-lsn-lid": {"description": "LSN Limit ID (LID index)", "minimum": 1, "type": "number", "maximum": 1023, "format": "number"}, "attribute": {"enum": ["custom1", "custom2", "custom3", "imei", "imsi", "msisdn", "default"], "type": "string", "description": "'custom1': Configure RADIUS Attribute Custom 1; 'custom2': Configure RADIUS Attribute Custom 2; 'custom3': Configure RADIUS Attribute Custom 3; 'imei': Configure RADIUS Attribute IMEI; 'imsi': Configure RADIUS Attribute IMSI; 'msisdn': Configure RADIUS Attribute MSISDN; 'default': Configure default; ", "format": "enum"}, "starts-with-lsn-lid": {"description": "LSN Limit ID (LID index)", "minimum": 1, "type": "number", "maximum": 1023, "format": "number"}, "exact-value": {"minLength": 1, "maxLength": 31, "type": "string", "description": "Value of the attribute", "format": "string-rlx"}, "starts-with": {"minLength": 1, "maxLength": 31, "type": "string", "description": "Value of the attribute", "format": "string-rlx"}, "default-lsn-lid": {"description": "LSN Limit ID (LID index)", "minimum": 1, "type": "number", "maximum": 1023, "format": "number"}, "optional": true}}]}, "uuid": {"description": "uuid of the object", "format": "string", "minLength": 1, "modify-not-allowed": 1, "optional": true, "maxLength": 64, "type": "string"}}}], "type": "array", "$ref": "/axapi/v3/cgnv6/lsn-radius-profile/{lid-profile-index}"}
    :param server_list: {"minItems": 1, "items": {"type": "server"}, "uniqueItems": true, "array": [{"required": ["name"], "properties": {"health-check-disable": {"description": "Disable configured health check configuration", "format": "flag", "default": 0, "optional": true, "not": "health-check", "type": "number"}, "port-list": {"minItems": 1, "items": {"type": "port"}, "uniqueItems": true, "array": [{"required": ["port-number", "protocol"], "properties": {"health-check-disable": {"description": "Disable health check", "format": "flag", "default": 0, "optional": true, "not": "health-check", "type": "number"}, "protocol": {"optional": false, "enum": ["tcp", "udp"], "type": "string", "description": "'tcp': TCP Port; 'udp': UDP Port; ", "format": "enum"}, "uuid": {"description": "uuid of the object", "format": "string", "minLength": 1, "modify-not-allowed": 1, "optional": true, "maxLength": 64, "type": "string"}, "port-number": {"description": "Port Number", "format": "number", "type": "number", "maximum": 65534, "minimum": 0, "optional": false}, "sampling-enable": {"minItems": 1, "items": {"type": "object"}, "uniqueItems": true, "type": "array", "array": [{"properties": {"optional": true, "counters1": {"enum": ["all", "curr_conn", "curr_req", "total_req", "total_req_succ", "total_fwd_bytes", "total_fwd_pkts", "total_rev_bytes", "total_rev_pkts", "total_conn", "last_total_conn", "peak_conn", "es_resp_200", "es_resp_300", "es_resp_400", "es_resp_500", "es_resp_other", "es_req_count", "es_resp_count", "es_resp_invalid_http", "total_rev_pkts_inspected", "total_rev_pkts_inspected_good_status_code", "response_time", "fastest_rsp_time", "slowest_rsp_time"], "type": "string", "description": "'all': all; 'curr_conn': curr_conn; 'curr_req': curr_req; 'total_req': total_req; 'total_req_succ': total_req_succ; 'total_fwd_bytes': total_fwd_bytes; 'total_fwd_pkts': total_fwd_pkts; 'total_rev_bytes': total_rev_bytes; 'total_rev_pkts': total_rev_pkts; 'total_conn': total_conn; 'last_total_conn': last_total_conn; 'peak_conn': peak_conn; 'es_resp_200': es_resp_200; 'es_resp_300': es_resp_300; 'es_resp_400': es_resp_400; 'es_resp_500': es_resp_500; 'es_resp_other': es_resp_other; 'es_req_count': es_req_count; 'es_resp_count': es_resp_count; 'es_resp_invalid_http': es_resp_invalid_http; 'total_rev_pkts_inspected': total_rev_pkts_inspected; 'total_rev_pkts_inspected_good_status_code': total_rev_pkts_inspected_good_status_code; 'response_time': response_time; 'fastest_rsp_time': fastest_rsp_time; 'slowest_rsp_time': slowest_rsp_time; ", "format": "enum"}}}]}, "action": {"description": "'enable': enable; 'disable': disable; ", "format": "enum", "default": "enable", "type": "string", "enum": ["enable", "disable"], "optional": true}, "health-check": {"description": "Health Check (Monitor Name)", "format": "string", "minLength": 1, "optional": true, "maxLength": 31, "not": "health-check-disable", "type": "string", "$ref": "/axapi/v3/health/monitor"}}}], "type": "array", "$ref": "/axapi/v3/cgnv6/server/{name}/port/{port-number}+{protocol}"}, "name": {"description": "Server Name", "format": "string-rlx", "minLength": 1, "optional": false, "maxLength": 127, "type": "string"}, "fqdn-name": {"description": "Server hostname", "format": "string", "minLength": 1, "modify-not-allowed": 1, "optional": true, "maxLength": 63, "type": "string"}, "sampling-enable": {"minItems": 1, "items": {"type": "object"}, "uniqueItems": true, "type": "array", "array": [{"properties": {"optional": true, "counters1": {"enum": ["all", "curr-conn", "total-conn", "fwd-pkt", "rev-pkt", "peak-conn"], "type": "string", "description": "'all': all; 'curr-conn': curr-conn; 'total-conn': total-conn; 'fwd-pkt': fwd-pkt; 'rev-pkt': rev-pkt; 'peak-conn': peak-conn; ", "format": "enum"}}}]}, "host": {"optional": true, "modify-not-allowed": 1, "type": "string", "description": "IP Address", "format": "ipv4-address"}, "action": {"description": "'enable': Enable this Real Server; 'disable': Disable this Real Server; ", "format": "enum", "default": "enable", "type": "string", "enum": ["enable", "disable"], "optional": true}, "server-ipv6-addr": {"optional": true, "modify-not-allowed": 1, "type": "string", "description": "IPV6 address", "format": "ipv6-address"}, "health-check": {"description": "Health Check Monitor (Health monitor name)", "format": "string", "minLength": 1, "optional": true, "maxLength": 31, "not": "health-check-disable", "type": "string", "$ref": "/axapi/v3/health/monitor"}, "uuid": {"description": "uuid of the object", "format": "string", "minLength": 1, "modify-not-allowed": 1, "optional": true, "maxLength": 64, "type": "string"}}}], "type": "array", "$ref": "/axapi/v3/cgnv6/server/{name}"}
    :param lsn_lid_list: {"minItems": 1, "items": {"type": "lsn-lid"}, "uniqueItems": true, "array": [{"required": ["lid-number"], "properties": {"drop-on-nat-pool-mismatch": {"default": 0, "optional": true, "type": "number", "description": "Drop traffic from users if their current NAT pool does not match the lid's (default: off)", "format": "flag"}, "user-quota-prefix-length": {"description": "NAT64 user quota prefix length (Prefix Length (Default: Uses the global NAT64 configured value))", "format": "number", "type": "number", "maximum": 128, "minimum": 1, "optional": true}, "lid-number": {"description": "LSN Lid", "format": "number", "type": "number", "maximum": 1023, "minimum": 1, "optional": false}, "extended-user-quota": {"type": "object", "properties": {"udp": {"minItems": 1, "items": {"type": "object"}, "uniqueItems": true, "type": "array", "array": [{"properties": {"udp-sessions": {"description": "Number of Extended Quota sessions allowed for this service", "minimum": 1, "type": "number", "maximum": 255, "format": "number"}, "optional": true, "udp-service-port": {"description": "Port (Port Value)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}}}]}, "tcp": {"minItems": 1, "items": {"type": "object"}, "uniqueItems": true, "type": "array", "array": [{"properties": {"tcp-service-port": {"description": "Port (Port Value)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}, "optional": true, "tcp-sessions": {"description": "Number of Extended Quota sessions allowed for this service", "minimum": 1, "type": "number", "maximum": 255, "format": "number"}}}]}}}, "ds-lite": {"type": "object", "properties": {"inside-src-permit-list": {"minLength": 1, "maxLength": 63, "type": "string", "description": "Class-List of IPv4 addresses permitted (Class-list to match for DS-Lite)", "format": "string-rlx"}}}, "user-quota": {"type": "object", "properties": {"session": {"description": "User Quota for number of data sessions", "minimum": 1, "type": "number", "maximum": 2147483647, "format": "number"}, "quota-tcp": {"type": "object", "properties": {"tcp-quota": {"description": "NAT port quota per user (default: not configured)", "minimum": 1, "type": "number", "maximum": 64000, "format": "number"}, "tcp-reserve": {"description": "Number of ports to reserve per user (default: same as user-quota value) (Reserved quota per user (default: same as user-quota value))", "minimum": 0, "type": "number", "maximum": 64000, "format": "number"}}}, "icmp": {"description": "User Quota for ICMP identifiers (NAT port quota per user (default: not configured))", "minimum": 1, "type": "number", "maximum": 64000, "format": "number"}, "quota-udp": {"type": "object", "properties": {"udp-reserve": {"description": "Number of ports to reserve per user (default: same as user-quota value) (Reserved quota per user (default: same as user-quota value))", "minimum": 0, "type": "number", "maximum": 64000, "format": "number"}, "udp-quota": {"description": "NAT port quota per user (default: not configured)", "minimum": 1, "type": "number", "maximum": 64000, "format": "number"}}}}}, "uuid": {"description": "uuid of the object", "format": "string", "minLength": 1, "modify-not-allowed": 1, "optional": true, "maxLength": 64, "type": "string"}, "override": {"description": "'none': Apply source NAT if configured (default); 'drop': Drop packets that match this LSN lid; 'pass-through': Layer-3 route packets that match this LSN lid and do not apply source NAT; ", "format": "enum", "default": "none", "type": "string", "enum": ["none", "drop", "pass-through"], "optional": true}, "source-nat-pool": {"type": "object", "properties": {"shared": {"default": 0, "type": "number", "description": "Use a shared source NAT pool or pool-group", "format": "flag"}, "pool-name": {"minLength": 1, "maxLength": 63, "type": "string", "description": "Source NAT Pool or Pool-Group", "format": "string-rlx"}}}, "conn-rate-limit": {"type": "object", "properties": {"conn-rate-limit-val": {"description": "Maximum connections per second (Default: No limit)", "minimum": 1, "type": "number", "maximum": 65535, "format": "number"}}}, "lsn-rule-list": {"type": "object", "properties": {"destination": {"description": "Apply LSN Rule-List on Destination (LSN Rule-List Name)", "format": "string-rlx", "minLength": 1, "maxLength": 63, "type": "string", "$ref": "/axapi/v3/cgnv6/lsn-rule-list"}}}, "respond-to-user-mac": {"default": 0, "optional": true, "type": "number", "description": "Use the user's source MAC for the next hop rather than the routing table (default: off)", "format": "flag"}, "name": {"description": "LSN Lid Name", "format": "string-rlx", "minLength": 1, "optional": true, "maxLength": 63, "type": "string"}}}], "type": "array", "$ref": "/axapi/v3/cgnv6/lsn-lid/{lid-number}"}
    :param DeviceProxy: The device proxy for REST operations and session handling. Refer to `common/device_proxy.py`

Class Description::
    CGN and IPv6 Migration commands.

    Class cgnv6 supports CRUD Operations and inherits from `common/A10BaseClass`.
    This class is the `"PARENT"` class for this module.`

    

    URL for this object::
    `https://<Hostname|Ip address>//axapi/v3/cgnv6`.

    

    
    """
    def __init__(self, **kwargs):
        self.ERROR_MSG = ""
        self.required=[]
        self.b_key = "cgnv6"
        self.a10_url="/axapi/v3/cgnv6"
        self.DeviceProxy = ""
        self.lsn = {}
        self.A10WW_global = {}
        self.fixed_nat = {}
        self.template = {}
        self.pcp = {}
        self.stateful_firewall = {}
        self.nat = {}
        self.dns_alg = {}
        self.dns64 = {}
        self.nat46_stateless = {}
        self.lsn_rule_list_list = []
        self.nat64 = {}
        self.ds_lite = {}
        self.dns64_virtualserver_list = []
        self.icmp = {}
        self.resource_usage = {}
        self.one_to_one = {}
        self.logging = {}
        self.service_group_list = []
        self.http_alg = {}
        self.lsn_radius_profile_list = []
        self.server_list = []
        self.l4 = {}
        self.lw_4o6 = {}
        self.ddos_protection = {}
        self.lsn_lid_list = []
        self.sixrd = {}

        for keys, value in kwargs.items():
            setattr(self,keys, value)


